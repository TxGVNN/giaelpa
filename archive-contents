(1
 (0x0 . [(1 0 1) ((emacs (26 1))) "Upload sharing to 0x0.st" tar])
 (ace-window . [(0 10 0) ((avy (0 5 0))) "Quickly switch windows." tar])
 (aio . [(1 0) ((emacs (26 1))) "async/await for Emacs Lisp" tar])
 (alert . [(1 3 1) ((gntp (0 1)) (log4e (0 3 0)) (cl-lib (0 5))) "Growl-style notification system for Emacs" tar])
 (ansible . [(0 4 1) ((s (1 9 0)) (f (0 16 2)) (emacs (25 1))) "Ansible minor mode" tar])
 (ansible-doc . [(0 4) ((emacs (24 3))) "Ansible documentation Minor Mode" tar])
 (anzu . [(0 66) ((emacs (25 1))) "Show number of matches in mode-line while searching" tar])
 (async . [(1 9 9) ((emacs (24 4))) "Asynchronous processing in Emacs" tar])
 (avy . [(0 5 0) ((emacs (24 1)) (cl-lib (0 5))) "Jump to arbitrary positions in visible text and select text quickly." tar])
 (beacon . [(1 3 3) ((seq (2 14))) "Highlight the cursor whenever the window scrolls" tar])
 (bui . [(1 2 1) ((emacs (24 3)) (dash (2 11 0))) "Buffer interface library" tar])
 (cape . [(2 1) ((emacs (28 1)) (compat (30))) "Completion At Point Extensions" tar])
 (closql . [(0 0 0) ((emacs (26 1)) (compat (30 0 2 0)) (emacsql (4 2 0))) "Store EIEIO objects using EmacSQL" tar])
 (combobulate . [(0 2) ((emacs (29))) "edit and navigate text by syntactic constructs" tar])
 (compat . [(30 0 2 0) ((emacs (24 4)) (seq (2 23))) "Emacs Lisp Compatibility Library" tar])
 (consult . [(2 7) ((emacs (28 1)) (compat (30))) "Consulting completing-read" tar])
 (consult-yasnippet . [(0 2) ((emacs (27 1)) (yasnippet (0 14)) (consult (0 16))) "A consulting-read interface for yasnippet" tar])
 (corfu . [(2 3) ((emacs (28 1)) (compat (30))) "COmpletion in Region FUnction" tar])
 (corfu-terminal . [(0 7) ((emacs (26 1)) (corfu (0 36)) (popon (0 13))) "Corfu popup on terminal" tar])
 (crux . [(0 5 0 20240808) ((emacs (26 1))) "A Collection of Ridiculously Useful eXtensions" tar])
 (dash . [(2 20 0) ((emacs (24))) "A modern list library for Emacs" tar])
 (denote . [(4 0 0) ((emacs (28 1))) "Simple notes with an efficient file-naming scheme" tar])
 (devdocs . [(0 6 1) ((emacs (27 1))) "Emacs viewer for DevDocs" tar])
 (diredfl . [(0 0 0) ((emacs (24))) "Extra font lock rules for a more colourful dired" tar])
 (docker . [(2 3 1) ((aio (1 0)) (dash (2 19 1)) (emacs (26 1)) (s (1 13 0)) (tablist (1 1)) (transient (0 4 3))) "Interface to Docker" tar])
 (docker-compose-mode . [(1 1 0) ((emacs (24 3)) (dash (2 12 0)) (yaml-mode (0 0 12))) "Major mode for editing docker-compose files" tar])
 (dockerfile-mode . [(1 7) ((emacs (24))) "Major mode for editing Docker's Dockerfiles" tar])
 (dumb-jump . [(0 5 4) ((emacs (24 3)) (s (1 11 0)) (dash (2 9 0)) (popup (0 5 3))) "Jump to definition for 50+ languages without configuration" tar])
 (eat . [(0 9 4) ((emacs (26 1)) (compat (29 1))) "Emulate A Terminal, in a region, in a buffer and in Eshell" tar])
 (edit-indirect . [(0 1 13) ((emacs (24 3))) "Edit regions in separate buffers" tar])
 (eev . [(20240205) ((emacs (25 1))) "Support for e-scripts (eepitch blocks, elisp hyperlinks, etc)" tar])
 (elfeed . [(3 4 2) ((emacs (24 3))) "an Emacs Atom/RSS feed reader" tar])
 (elisp-refs . [(1 5) ((dash (2 12 0)) (s (1 11 0))) "find callers of elisp functions or macros" tar])
 (elpa-mirror . [(2 2 2 20230318) ((emacs (25 1))) "Create local package repository from installed packages" tar])
 (emacsql . [(0 0 0) ((emacs (26 1))) "Highend" tar])
 (embark . [(1 1 1) ((emacs (27 1)) (compat (29 1 4 0))) "Conveniently act on minibuffer completions" tar])
 (embark-consult . [(1 1) ((emacs (27 1)) (compat (29 1 4 0)) (embark (1 0)) (consult (1 0))) "Consult integration for Embark" tar])
 (engine-mode . [(2 2 4) ((cl-lib (0 5))) "Define and query search engines" tar])
 (envrc . [(0 0 0) ((emacs (26 1)) (inheritenv (0 1))) "Support for `direnv' that operates buffer-locally" tar])
 (erlang . [(2 7 0) ((emacs (24 1))) "Erlang major mode" tar])
 (expreg . [(1 0 0) ((emacs (29 1))) "Simple expand region" tar])
 (f . [(0 21 0) ((emacs (24 1)) (s (1 7 0)) (dash (2 2 0))) "Modern API for working with files and directories" tar])
 (forge . [(0 0 0) ((emacs (29 1)) (compat (30 1)) (closql (2 2 2)) (emacsql (4 3 1)) (ghub (4 3 2)) (let-alist (1 0 6)) (llama (0 6 3)) (magit (4 3 6)) (markdown-mode (2 7)) (seq (2 24)) (transient (0 9 0)) (yaml (1 2 0))) "Access Git forges from Magit" tar])
 (gcmh . [(0 2 1) ((emacs (24))) "the Garbage Collector Magic Hack" tar])
 (geiser . [(0 32) ((emacs (27 1)) (project (0 8 1))) "GNU Emacs and Scheme talk to each other" tar])
 (geiser-guile . [(0 28 3) ((emacs (26 1)) (transient (0 3)) (geiser (0 28 1))) "Guile and Geiser talk to each other" tar])
 (gh . [(1 0 1) ((emacs (25 1)) (pcache (0 4 2)) (logito (0 1)) (marshal (0 9 0)) (cl-lib (0 3))) "A GitHub library for Emacs" tar])
 (ghub . [(0 0 0) ((emacs (29 1)) (compat (30 0 2 0)) (let-alist (1 0 6)) (llama (0 6 1)) (treepy (0 1 2))) "Client libraries for Git forge APIs" tar])
 (gist . [(1 5 0 20240204) ((emacs (24 1)) (gh (0 10 0))) "Emacs integration for gist.github.com" tar])
 (git-gutter . [(0 93) ((emacs (25 1))) "Port of Sublime Text plugin GitGutter" tar])
 (git-link . [(0 9 2) ((emacs (24 3))) "Get the GitHub/Bitbucket/GitLab URL for a buffer location" tar])
 (gntp . [(0 1) nil "Growl Notification Protocol for Emacs" tar])
 (hcl-mode . [(0 3) ((emacs (24 3))) "Major mode for Hashicorp" tar])
 (helpful . [(0 21) ((emacs (25)) (dash (2 18 0)) (s (1 11 0)) (f (0 20 0)) (elisp-refs (1 2))) "A better *help* buffer" tar])
 (hl-todo . [(0 0 0) ((emacs (26 1)) (compat (30 0 2 0))) "Highlight TODO and similar keywords" tar])
 (ht . [(2 3) ((dash (2 12 0))) "The missing hash table library for Emacs" tar])
 (inheritenv . [(0 2) ((emacs (24 4))) "Make temp buffers inherit buffer-local environment variables" tar])
 (inspector . [(0 38) ((emacs (27 1))) "Tool for inspection of Emacs Lisp objects" tar])
 (isearch-mb . [(0 8) ((emacs (27 1))) "Control isearch from the minibuffer" tar])
 (jq-mode . [(0 4 1) ((emacs (25 1))) "Edit jq scripts." tar])
 (js2-mode . [(20231224) ((emacs (24 1)) (cl-lib (0 5))) "Improved JavaScript editing mode" tar])
 (let-alist . [(1 0 6) ((emacs (24 1))) "Easily letlist by their names" tar])
 (list-utils . [(0 4 7) nil "List-manipulation utility functions" tar])
 (llama . [(0 0 0) ((emacs (26 1)) (compat (30 1))) "Compact syntax for short lambda" tar])
 (log4e . [(0 4 1) nil "provide logging framework for elisp" tar])
 (logito . [(0 1) ((emacs (25 1))) "logging library for Emacs" tar])
 (loop . [(1 3) nil "friendly imperative loop structures" tar])
 (magit . [(0 0 0) ((emacs (27 1)) (compat (30 1)) (llama (1 0 0)) (magit-section (4 3 8)) (seq (2 24)) (transient (0 9 3)) (with-editor (3 4 4))) "A Git porcelain inside Emacs" tar])
 (magit-popup . [(0 0 0) ((emacs (24 4)) (dash (2 13 0))) "Define prefixsuffix command combos" tar])
 (magit-todos . [(1 8) ((emacs (26 1)) (async (1 9 2)) (dash (2 13 0)) (f (0 17 2)) (hl-todo (1 9 0)) (magit (2 13 0)) (pcre2el (1 8)) (s (1 12 0)) (transient (0 2 0))) "Show source file TODOs in Magit" tar])
 (marginalia . [(2 2) ((emacs (28 1)) (compat (30))) "Enrich existing commands with completion annotations" tar])
 (markdown-mode . [(2 7) ((emacs (27 1))) "Major mode for Markdown-formatted text" tar])
 (marshal . [(0 9 1) ((emacs (25 1)) (ht (2 0))) "eieio extension for automatic (un)marshalling" tar])
 (move-text . [(2 0 10) nil "Move current line or region with Mdown." tar])
 (multiple-cursors . [(0 0 0) ((cl-lib (0 5))) "Multiple cursors for emacs." tar])
 (nginx-mode . [(1 1 10) nil "major mode for editing nginx config files" tar])
 (ob-compile . [(0 4) ((emacs (24 4))) "Run compile by org-babel" tar])
 (orderless . [(1 5) ((emacs (27 1)) (compat (30))) "Completion style for matching regexps in any order" tar])
 (org-alert . [(0 2 0) ((org (9 0)) (alert (1 2))) "Notify org deadlines via notify-send" tar])
 (org-bullets . [(0 2 4) nil "Show bullets in org8 characters" tar])
 (org-tanglesync . [(1 1) ((emacs (24 4))) "Syncing org src blocks with tangled external files" tar])
 (org-transclusion . [(1 4 0) ((emacs (27 1)) (org (9 4))) "Transclude text content via links" tar])
 (pcache . [(0 5 1) ((emacs (25 1))) "persistent caching for Emacs." tar])
 (pcmpl-args . [(0 1 3) ((emacs (25 1))) "Enhanced shell command completion" tar])
 (pcre2el . [(1 12) ((emacs (25 1))) "regexp syntax converter" tar])
 (perspective . [(2 19 1) ((emacs (24 4)) (cl-lib (0 5))) "switch between named perspectives of the editor" tar])
 (pinentry . [(0 1) nil "GnuPG Pinentry server implementation" tar])
 (popon . [(0 13) ((emacs (25 1))) "Pop floating text on a window" tar])
 (popup . [(0 5 9) ((emacs (24 3))) "Visual Popup User Interface" tar])
 (project . [(0 11 1) ((emacs (26 1)) (xref (1 7 0))) "Operations on the current project" tar])
 (project-tasks . [(0 7 0) ((emacs (26 1)) (project (0 6 0))) "Efficient task management for your project" tar])
 (rainbow-delimiters . [(2 1 5) nil "Highlight brackets according to their depth" tar])
 (rainbow-mode . [(1 0 6) nil "Colorize color names in buffers" tar])
 (rg . [(2 3 0) ((emacs (25 1)) (transient (0 3 0)) (wgrep (2 1 10))) "A search tool based on ripgrep" tar])
 (s . [(1 13 0) nil "The long lost Emacs string manipulation library." tar])
 (shut-up . [(0 3 2) ((cl-lib (0 3)) (emacs (24))) "Shut up would you!" tar])
 (simple-httpd . [(1 5 1) ((cl-lib (0 3))) "pure elisp HTTP server" tar])
 (skewer-mode . [(1 8 0) ((simple-httpd (1 4 0)) (js2-mode (20090723)) (emacs (24))) "live browser JavaScript, CSS, and HTML interaction" tar])
 (smartparens . [(1 11 0) ((dash (2 13 0))) "Automatic insertion, wrapping and paredit-like navigation with user defined pairs." tar])
 (symbol-overlay . [(4 3) ((emacs (24 3)) (seq (2 2))) "Highlight symbols with keymap-enabled overlays" tar])
 (tablist . [(1 0) ((emacs (24 3))) "Extended tabulatedmode" tar])
 (terraform-mode . [(0 6) ((emacs (24 3)) (hcl-mode (0 3)) (dash (2 17 0))) "Major mode for terraform configuration file" tar])
 (transient . [(0 0 0) ((emacs (26 1)) (compat (30 1)) (seq (2 24))) "Transient commands" tar])
 (treepy . [(0 1 1) ((emacs (25 1))) "Generic tree traversal tools" tar])
 (vertico . [(2 4) ((emacs (28 1)) (compat (30))) "VERTical Interactive COmpletion" tar])
 (volatile-highlights . [(1 15) nil "Minor mode for visual feedback on some operations." tar])
 (vundo . [(2 4 0) ((emacs (28 1))) "Visual undo tree" tar])
 (wgrep . [(3 0 0) ((emacs (25 1))) "Writable grep buffer" tar])
 (with-editor . [(0 0 0) ((emacs (26 1)) (compat (30 0 0 0))) "Use the Emacsclient as $EDITOR" tar])
 (x509-mode . [(0 0 0) ((emacs (25 1))) "View certificates, CRLs and keys using OpenSSL" tar])
 (xclip . [(1 11 1) nil "Copy&paste GUI clipboard from text terminal" tar])
 (xref . [(1 7 0) ((emacs (26 1))) "Cross-referencing commands" tar])
 (yaml . [(1 2 0) ((emacs (25 1))) "YAML parser for Elisp" tar])
 (yaml-mode . [(0 0 16) ((emacs (24 1))) "Major mode for editing YAML files" tar])
 (yasnippet . [(0 14 3) ((cl-lib (0 5)) (emacs (24 4))) "Yet another snippet extension for Emacs" tar])
 (yasnippet-snippets . [(1 1 20240724) ((yasnippet (0 8 0))) "Collection of yasnippet snippets" tar])
 (ztree . [(1 0 6) ((cl-lib (0))) "Text mode directory tree" tar])
)
